// glossary for the rest of this file
// capital letters are stand-ins

I = identifier
P = parameter
A = argument


// function declaration
// compiler looks for syntax:
// IDENTIFIER -> OPEN_PAREN -> <optional> PARAMS -> CLOSE_PAREN -> CODE_BLOCK < { ... } >

I(P){
    ...
}

// function call
// compiler looks for syntax:
// <pre-defined function> IDENTIFIER -> OPEN_PAREN -> <optional> ARGS -> CLOSE_PAREN

I(A)

// let is the default variable type.
// therefor it requires no prefix.
// lets work differently than in JS
// is deleated once called, or falls out of scope.

I = 5   /// kind: LET, type: NUMBER, value: 5
log(I) // 5
log(I) // undefined

// const is declared with "*". It maintains normal JS behaviour
// when it falls out of scope, it is gone.
// immutable

*I = "hello"    /// kind: CONST, type: STRING, value: HELLO
log(I)          // hello
log(I)          // hello

